{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2020/W26\n",
    "### [data world](https://data.world/makeovermonday/2020w26)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import plotly.express as ex\n",
    "from ipywidgets import interact, Select"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "df = pd.read_csv('https://query.data.world/s/nswes6hc5mzdgd7hpzhqbezq7j2u6c')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Country</th>\n",
       "      <th>Code</th>\n",
       "      <th>Region</th>\n",
       "      <th>Income group</th>\n",
       "      <th>WBL Report Year</th>\n",
       "      <th>Question Category</th>\n",
       "      <th>Question</th>\n",
       "      <th>Text Answer</th>\n",
       "      <th>Index Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AFG1971</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "      <td>South Asia</td>\n",
       "      <td>Low income</td>\n",
       "      <td>1971</td>\n",
       "      <td>Assets</td>\n",
       "      <td>Do female and male surviving spouses have equa...</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG1971</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "      <td>South Asia</td>\n",
       "      <td>Low income</td>\n",
       "      <td>1971</td>\n",
       "      <td>Assets</td>\n",
       "      <td>Do men and women have equal ownership rights t...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AFG1971</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "      <td>South Asia</td>\n",
       "      <td>Low income</td>\n",
       "      <td>1971</td>\n",
       "      <td>Assets</td>\n",
       "      <td>Do sons and daughters have equal rights to inh...</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AFG1971</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "      <td>South Asia</td>\n",
       "      <td>Low income</td>\n",
       "      <td>1971</td>\n",
       "      <td>Assets</td>\n",
       "      <td>Does the law grant spouses equal administrativ...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AFG1971</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "      <td>South Asia</td>\n",
       "      <td>Low income</td>\n",
       "      <td>1971</td>\n",
       "      <td>Assets</td>\n",
       "      <td>Does the law provide for the valuation of nonm...</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID      Country Code      Region Income group  WBL Report Year  \\\n",
       "0  AFG1971  Afghanistan  AFG  South Asia   Low income             1971   \n",
       "1  AFG1971  Afghanistan  AFG  South Asia   Low income             1971   \n",
       "2  AFG1971  Afghanistan  AFG  South Asia   Low income             1971   \n",
       "3  AFG1971  Afghanistan  AFG  South Asia   Low income             1971   \n",
       "4  AFG1971  Afghanistan  AFG  South Asia   Low income             1971   \n",
       "\n",
       "  Question Category                                           Question  \\\n",
       "0            Assets  Do female and male surviving spouses have equa...   \n",
       "1            Assets  Do men and women have equal ownership rights t...   \n",
       "2            Assets  Do sons and daughters have equal rights to inh...   \n",
       "3            Assets  Does the law grant spouses equal administrativ...   \n",
       "4            Assets  Does the law provide for the valuation of nonm...   \n",
       "\n",
       "  Text Answer  Index Score  \n",
       "0          No            0  \n",
       "1         Yes           20  \n",
       "2          No            0  \n",
       "3         Yes           20  \n",
       "4          No            0  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 332500 entries, 0 to 332499\n",
      "Data columns (total 10 columns):\n",
      " #   Column             Non-Null Count   Dtype \n",
      "---  ------             --------------   ----- \n",
      " 0   ID                 332500 non-null  object\n",
      " 1   Country            332500 non-null  object\n",
      " 2   Code               332500 non-null  object\n",
      " 3   Region             332500 non-null  object\n",
      " 4   Income group       332500 non-null  object\n",
      " 5   WBL Report Year    332500 non-null  int64 \n",
      " 6   Question Category  332500 non-null  object\n",
      " 7   Question           332500 non-null  object\n",
      " 8   Text Answer        332500 non-null  object\n",
      " 9   Index Score        332500 non-null  int64 \n",
      "dtypes: int64(2), object(8)\n",
      "memory usage: 25.4+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Do female and male surviving spouses have equal rights to inherit assets?'"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Country'] == 'Japan'].loc[145250, 'Question']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "countries = list(df['Country'].unique())\n",
    "years = list(df['WBL Report Year'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>WBL Report Year</th>\n",
       "      <th>Index Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8061</th>\n",
       "      <td>Sudan</td>\n",
       "      <td>1982</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8902</th>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>1973</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8903</th>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>1974</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8904</th>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>1975</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8905</th>\n",
       "      <td>United Arab Emirates</td>\n",
       "      <td>1976</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4696</th>\n",
       "      <td>Latvia</td>\n",
       "      <td>2017</td>\n",
       "      <td>22.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4695</th>\n",
       "      <td>Latvia</td>\n",
       "      <td>2016</td>\n",
       "      <td>22.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4694</th>\n",
       "      <td>Latvia</td>\n",
       "      <td>2015</td>\n",
       "      <td>22.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2898</th>\n",
       "      <td>France</td>\n",
       "      <td>2019</td>\n",
       "      <td>22.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4699</th>\n",
       "      <td>Latvia</td>\n",
       "      <td>2020</td>\n",
       "      <td>22.857143</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9500 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Country  WBL Report Year  Index Score\n",
       "8061                 Sudan             1982     4.000000\n",
       "8902  United Arab Emirates             1973     4.000000\n",
       "8903  United Arab Emirates             1974     4.000000\n",
       "8904  United Arab Emirates             1975     4.000000\n",
       "8905  United Arab Emirates             1976     4.000000\n",
       "...                    ...              ...          ...\n",
       "4696                Latvia             2017    22.857143\n",
       "4695                Latvia             2016    22.857143\n",
       "4694                Latvia             2015    22.857143\n",
       "2898                France             2019    22.857143\n",
       "4699                Latvia             2020    22.857143\n",
       "\n",
       "[9500 rows x 3 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['Country', 'WBL Report Year'], as_index=False).mean().sort_values(['Index Score'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def show_chart(country):\n",
    "    temp_df = df.groupby(['Country', 'WBL Report Year'], as_index=False).mean()\n",
    "    temp_df_A = temp_df[(temp_df['Country'] == 'Japan')]\n",
    "    temp_df_B = temp_df[(temp_df['Country'] == country)]\n",
    "    plt.plot(temp_df_A['WBL Report Year'], temp_df_A['Index Score'])\n",
    "    plt.plot(temp_df_B['WBL Report Year'], temp_df_B['Index Score'])\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6ce4252b9cc540c38acd53c826e9c9b4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(Select(description='Country A', options=('Afghanistan', 'Albania', 'Algeria', 'Angola', …"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<function __main__.show_chart(country)>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p1 = Select(description='Country A', options=countries, rows=4,)\n",
    "interact(show_chart, country=p1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
